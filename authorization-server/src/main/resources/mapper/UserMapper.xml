<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dorohedoro.mapper.UserMapper">

    <resultMap id="baseResultMap" type="user">
        <id column="user_id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password_hash" jdbcType="VARCHAR" property="password" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="enabled" jdbcType="TINYINT" property="enabled" />
        <result column="account_non_expired" jdbcType="TINYINT" property="accountNonExpired" />
        <result column="account_non_locked" jdbcType="TINYINT" property="accountNonLocked" />
        <result column="credentials_non_expired" jdbcType="TINYINT" property="credentialsNonExpired" />
        <collection property="roles" ofType="role">
            <id column="role_id" jdbcType="BIGINT" property="id" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
            <result column="role_display_name" jdbcType="VARCHAR" property="displayName"/>
            <result column="built_in" jdbcType="TINYINT" property="builtIn"/>
            <collection property="permissions" ofType="permission">
                <id column="permission_id" jdbcType="BIGINT" property="id" />
                <result column="permission_name" jdbcType="VARCHAR" property="authority"/>
                <result column="permission_display_name" jdbcType="VARCHAR" property="displayName"/>
            </collection>
        </collection>
    </resultMap>
    
    <sql id="baseSelectSql">
        select u.id as user_id, username, password_hash, mobile, email, enabled, account_non_expired, account_non_locked, credentials_non_expired,
               r.id as role_id, role_name, r.display_name as role_display_name, built_in,
               p.id as permission_id, permission_name, p.display_name as permission_display_name
        from users as u
        join users_roles as ur on u.id = ur.user_id
        join roles as r on ur.role_id = r.id
        join roles_permissions rp on r.id = rp.role_id
        join permissions p on rp.permission_id = p.id
    </sql>
    
    <select id="selectByUsername" resultMap="baseResultMap">
        <include refid="baseSelectSql"/>
        where u.username = #{username};
    </select>

    <select id="selectByEmail" resultMap="baseResultMap">
        select id as user_id, username, password_hash, mobile, email, enabled, account_non_expired, account_non_locked, credentials_non_expired from users where email = #{email}
    </select>

    <select id="selectPage" resultMap="baseResultMap">
        <include refid="baseSelectSql"/>
        <trim prefix="where" prefixOverrides="and">
            <if test="user.username != null and user.username != ''">
                u.username = #{user.username}
            </if>
            <if test="user.email != null and user.email != ''">
                and u.email = #{user.email}
            </if>
        </trim>
    </select>
    
    <select id="countByUsername" resultType="long">
        select count(1) from users where username = #{username}
    </select>
    
    <select id="countByEmail" resultType="long">
        select count(1) from users where email = #{email}
    </select>
    
    <select id="countByMobile" resultType="long">
        select count(1) from users where mobile = #{mobile}
    </select>
</mapper>
